{"components":{"responses":{},"schemas":{"ApiSendContentContentRequest":{"properties":{"content":{"description":"Content","example":"Hello, World!","type":"string","x-struct":null,"x-validate":null},"type":{"description":"Type","example":"text/plain","type":"string","x-struct":null,"x-validate":null}},"title":"ApiSendContentContentRequest","type":"object","x-struct":"Elixir.Web.Doc.Requests.Content.ApiSendContent.ApiSendContentContentRequest","x-validate":null},"ApiSendContentPaymentDetails":{"properties":{"amount":{"description":"Amount","example":100.0,"type":"number","x-struct":null,"x-validate":null},"currency":{"description":"Currency","example":"EUR","type":"string","x-struct":null,"x-validate":null},"description":{"description":"Description","example":"Payment for services","type":"string","x-struct":null,"x-validate":null},"due_date":{"description":"Due Date","example":"2021-12-31","type":"string","x-struct":null,"x-validate":null},"iban":{"description":"IBAN","example":"DE89370400440532013000","type":"string","x-struct":null,"x-validate":null},"reference":{"description":"Reference","example":"123456789","type":"string","x-struct":null,"x-validate":null}},"title":"ApiSendContentPaymentDetails","type":"object","x-struct":"Elixir.Web.Doc.Requests.Content.ApiSendContent.ApiSendContentPaymentDetails","x-validate":null},"ApiSendContentPaymentInfo":{"properties":{"details":{"$ref":"#/components/schemas/ApiSendContentPaymentDetails"},"payable":{"description":"Payable","example":true,"type":"boolean","x-struct":null,"x-validate":null}},"title":"ApiSendContentPaymentInfo","type":"object","x-struct":"Elixir.Web.Doc.Requests.Content.ApiSendContent.ApiSendContentPaymentInfo","x-validate":null},"ApiSendContentReceiverBirthInformation":{"properties":{"birth_name":{"description":"Birth Name","example":"Smith","type":"string","x-struct":null,"x-validate":null},"date_of_birth":{"description":"Date of Birth","example":"1990-01-01","type":"string","x-struct":null,"x-validate":null},"given_names":{"description":"Given Name(s)","example":"John William","type":"string","x-struct":null,"x-validate":null},"last_name":{"description":"Last Name","example":"Doe","type":"string","x-struct":null,"x-validate":null},"nationality":{"description":"Nationality","example":"Germany","type":"string","x-struct":null,"x-validate":null},"place_of_birth":{"description":"Place of Birth","example":"Berlin","type":"string","x-struct":null,"x-validate":null}},"title":"ApiSendContentReceiverBirthInformation","type":"object","x-struct":"Elixir.Web.Doc.Requests.Content.ApiSendContent.ApiSendContentReceiverBirthInformation","x-validate":null},"ApiSendContentReceiverRequest":{"properties":{"account_id":{"description":"Account ID","example":"123456789","type":"string","x-struct":null,"x-validate":null},"birth_information":{"$ref":"#/components/schemas/ApiSendContentReceiverBirthInformation"},"date_of_birth":{"description":"Date of Birth","example":"1990-01-01","type":"string","x-struct":null,"x-validate":null},"email":{"description":"Email Address","example":"john.doe@example.com","type":"string","x-struct":null,"x-validate":null},"first_name":{"description":"First Name","example":"John","type":"string","x-struct":null,"x-validate":null},"full_name":{"description":"Full Name","example":"John Doe","type":"string","x-struct":null,"x-validate":null},"last_name":{"description":"Last Name","example":"Doe","type":"string","x-struct":null,"x-validate":null},"ssn":{"description":"Social Security Number","example":"123-45-6789","type":"string","x-struct":null,"x-validate":null},"tel":{"description":"Phone Number","example":"+49 123-456-7890","type":"string","x-struct":null,"x-validate":null},"vat_id":{"description":"VAT ID","example":"DE123456789","type":"string","x-struct":null,"x-validate":null}},"title":"ApiSendContentReceiverRequest","type":"object","x-struct":"Elixir.Web.Doc.Requests.Content.ApiSendContent.ApiSendContentReceiverRequest","x-validate":null},"ApiSendContentSendContentRequest":{"properties":{"body":{"description":"Content","example":[{"content":"PDF Content","type":"application/pdf"}],"items":{"$ref":"#/components/schemas/ApiSendContentContentRequest"},"type":"array","x-struct":null,"x-validate":null},"payment_info":{"$ref":"#/components/schemas/ApiSendContentPaymentInfo"},"signature_info":{"$ref":"#/components/schemas/ApiSendContentSignatureInfo"},"subject":{"description":"Subject","example":"Important Document","type":"string","x-struct":null,"x-validate":null},"to":{"$ref":"#/components/schemas/ApiSendContentReceiverRequest"},"type":{"description":"The type of the mail, it enables content specific actions.","enum":["letter","invoice","contract"],"example":"letter","type":"string","x-struct":null,"x-validate":null}},"title":"ApiSendContentSendContentRequest","type":"object","x-struct":"Elixir.Web.Doc.Requests.Content.ApiSendContent.ApiSendContentSendContentRequest","x-validate":null},"ApiSendContentSignatureInfo":{"properties":{"requesting_signer":{"description":"Requesting Signer","items":{"properties":{"field":{"description":"Field","example":"Signature Field","type":"string","x-struct":null,"x-validate":null},"signer":{"description":"Which party shall sign the field","enum":["sender","receiver"],"type":"string","x-struct":null,"x-validate":null}},"type":"object","x-struct":null,"x-validate":null},"type":"array","x-struct":null,"x-validate":null},"signature_reference":{"description":"Signature Reference","example":"123456789","type":"string","x-struct":null,"x-validate":null}},"title":"ApiSendContentSignatureInfo","type":"object","x-struct":"Elixir.Web.Doc.Requests.Content.ApiSendContent.ApiSendContentSignatureInfo","x-validate":null},"Content":{"properties":{"content":{"type":"string","x-struct":null,"x-validate":null},"content_type":{"type":"string","x-struct":null,"x-validate":null}},"required":["content"],"title":"Content","type":"object","x-struct":"Elixir.Web.Doc.Responses.Content.ContentGetResponse.Content","x-validate":null},"ContentCreateResponse":{"properties":{"id":{"type":"string","x-struct":null,"x-validate":null}},"title":"ContentCreateResponse","type":"object","x-struct":"Elixir.Web.Doc.Responses.Content.ContentCreateResponse","x-validate":null},"ContentGetResponse":{"properties":{"content":{"$ref":"#/components/schemas/Content"},"meta":{"$ref":"#/components/schemas/Meta"}},"title":"ContentGetResponse","type":"object","x-struct":"Elixir.Web.Doc.Responses.Content.ContentGetResponse","x-validate":null},"CreateSignatureReferenceRequest":{"properties":{"fields":{"description":"The fields defining the signature reference","items":{"properties":{"name":{"description":"The name of the field","type":"string","x-struct":null,"x-validate":null},"purpose":{"description":"The purpose of the field","type":"string","x-struct":null,"x-validate":null},"role":{"description":"The role of the signer of the field","type":"string","x-struct":null,"x-validate":null}},"required":["name"],"type":"object","x-struct":null,"x-validate":null},"type":"array","x-struct":null,"x-validate":null}},"title":"CreateSignatureReferenceRequest","type":"object","x-struct":"Elixir.Web.Doc.Requests.Content.CreateSignatureReferenceRequest","x-validate":null},"ErrorResponse":{"properties":{"code":{"type":"number","x-struct":null,"x-validate":null},"message":{"type":"string","x-struct":null,"x-validate":null},"status":{"type":"number","x-struct":null,"x-validate":null}},"required":["to","content"],"title":"ErrorResponse","type":"object","x-struct":"Elixir.Web.Doc.Responses.Error.ErrorResponse","x-validate":null},"ErrorResponse40102":{"properties":{"code":{"example":40102,"type":"number","x-struct":null,"x-validate":null},"message":{"example":"No access to tenant","type":"string","x-struct":null,"x-validate":null},"status":{"example":401,"type":"number","x-struct":null,"x-validate":null}},"title":"ErrorResponse40102","type":"object","x-struct":null,"x-validate":null},"ErrorResponse40103":{"properties":{"code":{"example":40103,"type":"number","x-struct":null,"x-validate":null},"message":{"example":"access not granted","type":"string","x-struct":null,"x-validate":null},"status":{"example":401,"type":"number","x-struct":null,"x-validate":null}},"title":"ErrorResponse40103","type":"object","x-struct":null,"x-validate":null},"ErrorResponse40400":{"properties":{"code":{"example":40400,"type":"number","x-struct":null,"x-validate":null},"message":{"example":"not found","type":"string","x-struct":null,"x-validate":null},"status":{"example":404,"type":"number","x-struct":null,"x-validate":null}},"title":"ErrorResponse40400","type":"object","x-struct":null,"x-validate":null},"ErrorResponse40401":{"properties":{"code":{"example":40401,"type":"number","x-struct":null,"x-validate":null},"message":{"example":"receiver not found","type":"string","x-struct":null,"x-validate":null},"status":{"example":404,"type":"number","x-struct":null,"x-validate":null}},"title":"ErrorResponse40401","type":"object","x-struct":null,"x-validate":null},"ErrorResponse42203":{"properties":{"code":{"example":42203,"type":"number","x-struct":null,"x-validate":null},"message":{"example":"invalid iban","type":"string","x-struct":null,"x-validate":null},"status":{"example":422,"type":"number","x-struct":null,"x-validate":null}},"title":"ErrorResponse42203","type":"object","x-struct":null,"x-validate":null},"LoginApiKeyRequest":{"properties":{"key":{"description":"The api key to use for authentication","type":"string","x-struct":null,"x-validate":null},"secret":{"description":"The secret of the api key","type":"string","x-struct":null,"x-validate":null}},"title":"LoginApiKeyRequest","type":"object","x-struct":"Elixir.Web.Doc.Requests.Auth.LoginApiKeyRequest","x-validate":null},"LoginResponse":{"properties":{"access_token":{"type":"string","x-struct":null,"x-validate":null},"created_at":{"format":"ISO 8601","type":"string","x-struct":null,"x-validate":null},"expires_in":{"type":"number","x-struct":null,"x-validate":null},"refresh_token":{"type":"string","x-struct":null,"x-validate":null},"scope":{"type":"string","x-struct":null,"x-validate":null},"token_type":{"type":"string","x-struct":null,"x-validate":null}},"required":["to","content"],"title":"LoginResponse","type":"object","x-struct":"Elixir.Web.Doc.Responses.Auth.Login.LoginResponse","x-validate":null},"Meta":{"properties":{"delivered":{"example":true,"type":"boolean","x-struct":null,"x-validate":null},"delivered_date":{"example":"2024-04-29T20:25:43.606150Z","format":"ISO 8601","type":"string","x-struct":null,"x-validate":null},"read":{"example":true,"type":"boolean","x-struct":null,"x-validate":null},"read_date":{"example":"2024-04-29T20:25:50.475815Z","format":"ISO 8601","type":"string","x-struct":null,"x-validate":null},"receiver":{"example":"2802510314782548","type":"string","x-struct":null,"x-validate":null},"receiver_state":{"description":"The state of the receiver, it is only return if the user is the receiver of the message","enum":["unread","read","archived","trashed","registering","deleted","pending"],"example":"unread","type":"string","x-struct":null,"x-validate":null},"sender":{"example":"c00d790d-b4ec-4908-a52d-6eba3d53953c","type":"string","x-struct":null,"x-validate":null},"sender_state":{"description":"The state of the sender, it is only return if the user is the sender of the message","enum":["active","archived","trashed","deleted","pending"],"example":"active","type":"string","x-struct":null,"x-validate":null},"sent_date":{"example":"2024-04-29T20:25:43.606150Z","format":"ISO 8601","type":"string","x-struct":null,"x-validate":null},"size":{"example":123765,"type":"number","x-struct":null,"x-validate":null},"title":{"example":"Test Betreff","type":"string","x-struct":null,"x-validate":null},"type":{"example":"letter","type":"string","x-struct":null,"x-validate":null}},"title":"Meta","type":"object","x-struct":"Elixir.Web.Doc.Responses.Content.ContentGetResponse.Meta","x-validate":null},"ReceiverExistResponse":{"properties":{"type":{"type":"string","x-struct":null,"x-validate":null}},"title":"ReceiverExistResponse","type":"object","x-struct":"Elixir.Web.Doc.Responses.Receiver.ReceiverExistResponse","x-validate":null},"SignatureReference":{"properties":{"fields":{"description":"The fields defining the signature reference","items":{"properties":{"name":{"description":"The name of the field","type":"string","x-struct":null,"x-validate":null},"purpose":{"description":"The purpose of the field","type":"string","x-struct":null,"x-validate":null},"role":{"description":"The role of the signer of the field","type":"string","x-struct":null,"x-validate":null}},"required":["name","value"],"type":"object","x-struct":null,"x-validate":null},"type":"array","x-struct":null,"x-validate":null},"id":{"type":"string","x-struct":null,"x-validate":null}},"required":["id","fields"],"title":"SignatureReference","type":"object","x-struct":"Elixir.Web.Doc.Responses.Content.SignatureReference","x-validate":null}},"securitySchemes":{"bearer_auth":{"scheme":"bearer","type":"http"}}},"info":{"description":"## Introduction\n\nThis documentation is intended for developers who want to interact directly with the Brifle system.\n\nBrifle follows national German laws. In case of international deliveries you are responsible for compliance with the law.\n\n## Terminology\n\n### Account\n\nAn account is associated with a legal person or company. There are two main types of account: personal and business.\n\n### User\n\nA user is required to authorise and log into the system. Each user has at least one account. Corporate accounts can have multiple users.\n\n### Tenant\n\nA tenant is defined as a sender. Each personal account is associated with one private tenant, while each business account is associated with at least one public tenant. It is possible for an account to be associated with multiple tenants, which is useful for companies that have different departments, each of which may send different types of documents, such as HR and Sales.\n\n## Limitations\n\nThe maximum request size is currently 3MB.\n\n## Conventions\n\n### Dates\n\nAll dates are returned in UTC time zone in iso8601 format.\n\niso8601 format: `yyyy-mm-ddThh:mm:ss.sZ`.\n\n\n## Error Codes\n\n| Code   | Status | Message                 |\n| ------ | ------ | ----------------------- |\n| 40000  | 400    | bad request             |\n| 40100  | 401    | unauthorized            |\n| 40101  | 401    | login Failed            |\n| 40102  | 401    | No access to tenant     |\n| 40103  | 401    | access not granted      |\n| 40105  | 401    | Not Access to Account   |\n| 40300  | 403    | forbidden               |\n| 40400  | 404    | not found               |\n| 40401  | 404    | receiver not found      |\n| 40402  | 404    | tenant not found        |\n| 40403  | 404    | account not found       |\n| 40405  | 404    | document not found      |\n| 42200  | 422    | unprocessable entity    |\n| 42201  | 422    | content type not supported |\n| 42202  | 422    | document has wrong encoding |\n| 42203  | 422    | invalid iban            |\n| 50000  | 500    | internal error          |\n\n\n\n    \n\n## Authorization API\n\nIn order to operate with the system you need to authorize with the system. For authentication we use oauth2. The account owner needs to setup an api key and generate an api secret. As ventor you can add the x-vendor header to mark that the process was initiated by you.\n\n\n\n","title":"Brifle","version":"v0.1","x-logo":{"altText":"Brifle logo","url":"/icon-briflenew.png"}},"openapi":"3.0.0","paths":{"/v1/auth/login":{"post":{"callbacks":{},"operationId":"Web.Api.Controller.AuthController.create","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginApiKeyRequest"}}},"description":"Login params","required":false},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginResponse"}}},"description":"Login response"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Login failed"}},"summary":"Login","tags":["Authentication"]}},"/v1/auth/logout":{"post":{"callbacks":{},"operationId":"Web.Api.Controller.AuthController.revoke","parameters":[{"description":"The token which to revoke","in":"path","name":"token","required":true,"schema":{"type":"string","x-struct":null,"x-validate":null}}],"responses":{"200":{"content":{"application/json":{}},"description":"Logout response"}},"summary":"Logout","tags":["Authentication"]}},"/v1/content/document/{id}":{"get":{"callbacks":{},"description":"Please note that for security reasons, not all fields are returns. As a sender you won't have access to receiver_state, and as receiver no access to the sender_state.\n    \n read is set to true once, the document was opened for the first time either by the mobile or webclient or via the API using the read flag. Once it is set to true it cannot be set to false.","operationId":"Web.Api.Controller.ContentController.get","parameters":[{"description":"document ID","example":"b0440b80-0857-43e9-8f13-723c8eb6a39c","in":"path","name":"id","required":true,"schema":{"type":"string","x-struct":null,"x-validate":null}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentGetResponse"}}},"description":"Content response"},"401":{"content":{"application/json":{"schema":{"properties":{"code":{"example":40103,"type":"number","x-struct":null,"x-validate":null},"message":{"example":"access not granted","type":"string","x-struct":null,"x-validate":null},"status":{"example":401,"type":"number","x-struct":null,"x-validate":null}},"title":"ErrorResponse40103","type":"object","x-struct":null,"x-validate":null}}},"description":"Unauthorized"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"example":40400,"type":"number","x-struct":null,"x-validate":null},"message":{"example":"not found","type":"string","x-struct":null,"x-validate":null},"status":{"example":404,"type":"number","x-struct":null,"x-validate":null}},"title":"ErrorResponse40400","type":"object","x-struct":null,"x-validate":null}}},"description":"Not found"}},"security":[{"bearer_auth":[]}],"summary":"Get content","tags":["Content"]}},"/v1/content/receiver/check":{"post":{"callbacks":{},"description":"Checks if a user is in the system","operationId":"Web.Api.Controller.ContentController.check_receiver","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiSendContentReceiverRequest"}}},"description":"Receiver params","required":false},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReceiverExistResponse"}}},"description":"Receiver response"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"example":40401,"type":"number","x-struct":null,"x-validate":null},"message":{"example":"receiver not found","type":"string","x-struct":null,"x-validate":null},"status":{"example":404,"type":"number","x-struct":null,"x-validate":null}},"title":"ErrorResponse40401","type":"object","x-struct":null,"x-validate":null}}},"description":"Not found"}},"security":[{"bearer_auth":[]}],"summary":"Checks receiver","tags":["Content"]}},"/v1/content/send/{tenant}":{"post":{"callbacks":{},"description":"Send content to a receiver. It can return the Error Code 42201 if the content type is not valid, 40401 if the receiver is not found, 42203 if the IBAN is invalid.","operationId":"Web.Api.Controller.ContentController.send","parameters":[{"description":"Tenent/Sender ID","example":"b0440b80-0857-43e9-8f13-723c8eb6a39c","in":"path","name":"tenant","required":true,"schema":{"type":"string","x-struct":null,"x-validate":null}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiSendContentSendContentRequest"}}},"description":"Content params","required":false},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentCreateResponse"}}},"description":"Create Content response"},"401":{"content":{"application/json":{"schema":{"properties":{"code":{"example":40102,"type":"number","x-struct":null,"x-validate":null},"message":{"example":"No access to tenant","type":"string","x-struct":null,"x-validate":null},"status":{"example":401,"type":"number","x-struct":null,"x-validate":null}},"title":"ErrorResponse40102","type":"object","x-struct":null,"x-validate":null}}},"description":"Unauthorized"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"example":40401,"type":"number","x-struct":null,"x-validate":null},"message":{"example":"receiver not found","type":"string","x-struct":null,"x-validate":null},"status":{"example":404,"type":"number","x-struct":null,"x-validate":null}},"title":"ErrorResponse40401","type":"object","x-struct":null,"x-validate":null}}},"description":"Not found"},"422":{"content":{"application/json":{"schema":{"properties":{"code":{"example":42203,"type":"number","x-struct":null,"x-validate":null},"message":{"example":"invalid iban","type":"string","x-struct":null,"x-validate":null},"status":{"example":422,"type":"number","x-struct":null,"x-validate":null}},"title":"ErrorResponse42203","type":"object","x-struct":null,"x-validate":null}}},"description":"Invalid IBAN"}},"security":[{"bearer_auth":[]}],"summary":"Send content","tags":["Content"]}},"/v1/signature/{signature_id}/export/{format}":{"get":{"callbacks":{},"operationId":"Web.Api.Controller.SignatureController.export_signature","parameters":[{"description":"The signature ID","example":"b0440b80-0857-43e9-8f13-723c8eb6a39c","in":"path","name":"signature_id","required":true,"schema":{"type":"string","x-struct":null,"x-validate":null}},{"description":"The format of the export","in":"path","name":"format","required":true,"schema":{"description":"The format to export the signature","enum":["xml"],"example":"xml","type":"string","x-struct":null,"x-validate":null}}],"responses":{"200":{"content":{"application/xml":{}},"description":"Signature export"}},"security":[{"bearer_auth":[]}],"summary":"Export signature","tags":["Signatures"]}},"/v1/signature/{tenant_id}/reference":{"post":{"callbacks":{},"operationId":"Web.Api.Controller.SignatureController.create_signature_reference","parameters":[{"description":"The tenant ID","example":"b0440b80-0857-43e9-8f13-723c8eb6a39c","in":"path","name":"tenant_id","required":true,"schema":{"type":"string","x-struct":null,"x-validate":null}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateSignatureReferenceRequest"}}},"description":"Signature reference params","required":false},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SignatureReference"}}},"description":"Signature reference response"}},"security":[{"bearer_auth":[]}],"summary":"Create a signature reference","tags":["Signatures"]}}},"security":[],"servers":[{"description":"The Sandbox Environment for testing and development purposes","url":"https://sandbox-api.brifle.de"},{"description":"The Production Environment","url":"https://api.brifle.de"}],"tags":[]}
